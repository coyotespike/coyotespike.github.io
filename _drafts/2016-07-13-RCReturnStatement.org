#+BEGIN_HTML
---
layout: post
title: A Recurse Center Return Statement
date: 2016-07-13 21:21
# Should be longer than 20 words, so it will appear as post summary
description: "In which I participate in an RC tradition, dare I say ritual, briefly describing my experiences in the Winter 2015 batch."
# tags will also be used as html meta keywords.
tags:
  - programming

show_meta: true
comments: true
mathjax: true
gistembed: true
published: true
noindex: false
nofollow: false
---
#+END_HTML

Life sciences PhD's have a minor tradition, I've noticed, of writing a small
scientific autobiography.  Mathematicians, lawyers, or engineers don't seem to
do this. There's a slight element of wonder to the tradition: what interested
this particular human in the subject?  How did he or she happen to bumble
through the weeding-out college courses and wind up an actual, you know,
scientist? I find it kind of endearing.
\\
The Recurse Center has its own literary traditions. First and foremost, every
participant is highly encouraged to blog. Tracking one's progress, ruminating on
different tech stacks or bugs or projects, analysing what worked and what didn't:
RC believes, with good reason, that this will aid in the growth of technical maturity.
\\
A smaller literary tradition, a musical secondary theme if you will, is the return statement, 
a summarizing and looking back at one's time at RC. Most people who participate 
write a few months after their batch never-graduates. It's been over a year since 
my batch scattered to the corners of the globe, so I'm a little behind the curve,
but aw shucks anyway here goes nothing.
\\
The weekend before we left, Libby (who led our little band of machine learners)
took Abdullah and Serban and me down to her lovely, somehow-tropical-feeling house
in Brooklyn. Serban slept, I read Logicomix, Libby and Abdullah figured out the
machine learning and taught Serban and me when we started paying attention again.
We walked on the green quad of the local university, gazed unbelieving at 
the famous gray/moldy parrots (!) of Brooklyn, coaxed a doorman into letting us
unwashen sinners peer in awe into a theater straight out of the gilded age.
\\
Another Friday night everyone wanted to do karaoke but we were all too cheap to
pay for it, so we got drunk on shots of vodka (and when that ran out, shots of
fine scotch, to my dismay) and screamed our lungs out in Hopper
instead. Nathaniel danced like a hero.
\\
Martino, David, Marin, and I went to the museum and got increasingly
cranky at our small size compared to the universe.
\\
I regret not spending more time pair programming, largely because I didn't know
what I was doing and felt awkward. I regret jumpstarting yet another
let's-read-the-entirety-of-SICP group before letting it die out (these /never/
work, though "SICP slowly" could).
\\
Jon and I practiced random bits of math. We heard a talk advocating moving all
your application logic into your database. Chris Drane and Chris Granger got me
started learning Clojure and ClojureScript, Rok inspired me to use them to build the
websites for my startup. This helped us get into Y Combinator's Fellowship
(where we figured out the idea wouldn't work but that's another story).
\\
That was the coldest winter in ten years, and I had barely adequate
winter gear. I bought a kettlebell and carried it back on the subway and swung
it in the room I rented from two Ukrainian Buddhists who never seemed to work,
instead spending 4 hours a day meditating. I rode the subway, ate in grunge
diners, and practiced Stoic philosophy with moderate success.
\\
I talked about how to give a speech, violating most of the advice I was giving
in the process, and taught people how to use Emacs. In turn people talked about
monads, networks, interview techniques, Python, Perl and magically turning Perl
into other nicer-looking languages, programming iPhones. People with CS PhD's,
humanities PhD's, no formal education, Google backgrounds, self-owned companies,
big IT corporation experience, no experience, moderate experience, all worked
together, helped each other, saw each other struggle, saw each other succeed.
\\
It's both humbling and empowering. Everyone is always trying something at which
they are a complete beginner, and yet they can do it, eventually.
\\
Recently I've been thinking about communities, how they're important and hard to
build. It seems to me that RC has always been more about building a community
than cashing out on the continuing, and likely-to-continue, shortage of software
developers. That's unique, and rather prescient.
\\
I still miss everyone, which is sentimental but there you go.
