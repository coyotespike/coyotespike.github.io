#+BEGIN_HTML
---
layout: post
title: An Org-Mode Worfklow
date: 2016-04-30 12:00
# Should be longer than 20 words, so it will appear as post summary
description: While the text editor Emacs may not be for everyone, one of its many rewards is the flexible to-do and research tool Org-Mode, developed by astronomist Carsten Dominik.
# tags will also be used as html meta keywords.
tags:
  - Emacs
  - org-mode

show_meta: true
comments: true
mathjax: true
gistembed: true
published: true
noindex: false
nofollow: false
---
#+END_HTML

I started learning Emacs because I wanted its compounding returns on increasing skill level: over time you move ever faster, as you add to your repertoire of document-editing tricks.
Later I learned that the openness and flexibility that comes with having all of your source code in the same format as the editor itself, and all in just plain text, were actually
part and parcel of the entire Unix philosophy of software. (The Unix philosophy allowed me to work with a lot of data, in a way that Excel or other tools just couldn't).

One of the best packages in Emacs is org-mode. Emacs has been called a keyboard-based operating system, not without justice, and org-mode similarly tends to swallow up your life.
If org-mode is the sort of thing you like, over time you move basically your entire life into it: reviewing flash cards, jotting down tasks, scheduling meetings, blog posts, 
notes, research, time tracking.

It's kind of like Scrivener, Workflowy, RescueTime, iCal, Pomodoro, Anki, and the GTD system, all rolled into one.

Anyway, here's what I like about org-mode.

1. The workflow is key. From any document, if I want to note down a task, I use org-capture. This creates a to-do item in To-Do.org. Alternatively, I can use org-capture to create a blog post, or an item for org-drill, or whatever. In either case, I don't break my flow of thought.

2. The org agenda shows all upcoming scheduled tasks. I also use org-habit, which are just repeating tasks that show how often you've completed them (and can prompt for a note when you mark it as done - "30 pushups" for TODO: exercise, or whatever).

3. I can "clock in" on a task in To-Do, and when I'm done archive the task in an automatically-created archive file. I can then see total time worked on that day, broken down by task. When clocking in, org prompts me for a time estimate.

4. Because all tasks are just bullet-points, I can nest sub-tasks, and expand or collapse them, like the app Workflowy. The top-level task can show percent or fraction of sub-tasks completed.

5. Best of all, at the end of the day, and despite all this manipulation, it's just text. I can edit time spent on a task, or whatever. There's no hidden magic.

This workflow is pretty GTD-ish, because it helps you get everything out of your head on the fly, and break things down into sub-tasks. It also works well with SRS and incremental reading. I see myself sticking with this, but I've used other systems productively, so whatever floats your boat.
